{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/Myposts/MyPosts.module.css","components/Profile/Myposts/posts/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Myposts/posts/Posttest.jsx","components/Profile/Myposts/MyPosts.jsx","components/Profile/Myposts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Posttest","className","s","post","src","alt","message","likesCount","maxLength10","maxLengthCreator","MyPosts","memo","console","log","postElements","profilePage","postData","map","el","MyPostReduxForm","onSubmit","values","addPost","newPost","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","MyPostsContainer","dispatch","addPostActionCreator","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","avatar","profile","photos","large","Profile","ProfileContainer","userId","router","params","authUserId","userProfileThunk","getStatus","compose","setUserProfile","location","useLocation","navigate","useNavigate","useParams"],"mappings":"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","file":"static/js/3.dd8cccec.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n            return <Component{...this.props} />\r\n        }\r\n    }\r\n\r\n   \r\n   let  ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__21hnq\",\"MyPosts\":\"MyPosts_MyPosts__3DMh7\",\"item\":\"MyPosts_item__2_s3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3DX6p\",\"item\":\"Post_item__1YsNi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__11eGg\",\"headerimg\":\"ProfileInfo_headerimg__1Hwnu\"};","import s from './Post.module.css'\r\nconst Posttest = (props) => {\r\n    \r\n    return (\r\n    <div className={s.post}>\r\n        <img src='https://i04.appmifile.com/730_bbs_en/15/10/2021/6c25b1cc748cf7be86183054aa711c46.jpg' alt=\"rage\" />\r\n        {props.message}\r\n        <div>like: {props.likesCount}</div>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Posttest;","import s from './MyPosts.module.css'\r\nimport Posttest from './posts/Posttest';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utilits/validators/validators';\r\nimport { Textarea } from '../../common/Form/Form';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n  console.log('Render');\r\n  let state = props.profilePage;\r\n\r\n  let postElements = state.postData.map(el => <Posttest message={el.message} likesCount={el.likesCount} />);\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPost)\r\n  }\r\n\r\n\r\n  return <div className={s.MyPosts}>\r\n    <h3>My Posts</h3>\r\n\r\n    <MyPostReduxForm onSubmit={addNewPost} />\r\n    <div>\r\n      {postElements}\r\n    </div>\r\n  </div>\r\n\r\n}\r\n)\r\n\r\nconst MyPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} placeholder={'type'} name={'newPost'}\r\n          validate={[required, maxLength10]}></Field>\r\n      </div>\r\n      <button>send</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({\r\n  form: 'post'\r\n})(MyPostForm);\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n      profilePage: state.profilePage\r\n\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      \r\n      addPost: (newPost) => { dispatch(addPostActionCreator(newPost)); }\r\n\r\n  }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n\r\n    }\r\n\r\n  \r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        }); \r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState ({\r\n            status:e.currentTarget.value\r\n        })\r\n        \r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onClick={this.activateEditMode}>{this.props.status}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange = {this.onStatusChange}  autoFocus={true} onBlur = {this.deactivateEditMode} \r\n                        value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status)\r\n\r\n   useEffect (() => {\r\n    setStatus(props.status);\r\n   }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n}\r\n\r\nconst  deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n} \r\n\r\nconst  onStatusChange = (e) => {\r\n    \r\n        setStatus(e.currentTarget.value);\r\n   \r\n    \r\n}\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            {! editMode &&\r\n                <div>\r\n                    <span onClick={activateEditMode} >{props.status}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange = {onStatusChange} autoFocus={true} onBlur = {deactivateEditMode} \r\n                    value={status}\r\n                         />\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusHooks;","import s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div>\r\n    \r\n      <div className={s.avatar}>\r\n        <img src= {props.profile.photos.large} />\r\n        <ProfileStatusHooks status=  {props.status} updateStatus = {props.updateStatus} />\r\n      </div>\r\n      \r\n      \r\n      \r\n      </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport MyPostsContainer from './Myposts/MyPostsContainer';\r\n\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nconst Profile = (props) => {\r\n  \r\n  \r\n    return (\r\n      <div>\r\n      <ProfileInfo profile={props.profile} status = {props.status} updateStatus = {props.updateStatus} />\r\n      <MyPostsContainer  />\r\n      \r\n      </div>\r\n    )\r\n      \r\n\r\n   \r\n}\r\n\r\nexport default Profile;","import Profile from \"./Profile\";\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { setUserProfile, userProfileThunk, getStatus, updateStatus  } from \"../../redux/profile-reducer\";\r\nimport {  useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            \r\n            userId = this.props.authUserId;\r\n        }\r\n        this.props.userProfileThunk(userId);\r\n        this.props.getStatus(userId);\r\n        \r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} \r\n            status = {this.props.status} updateStatus = {this.props.updateStatus} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n let mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n    });\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setUserProfile, userProfileThunk, getStatus, updateStatus }),\r\n    withRouter  )(ProfileContainer);"],"sourceRoot":""}